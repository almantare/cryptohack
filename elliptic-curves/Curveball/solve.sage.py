
print('test')
# This file was *autogenerated* from the file solve.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff = Integer(0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff); _sage_const_0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc = Integer(0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc); _sage_const_0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b = Integer(0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b); _sage_const_0x3B827FF5E8EA151E6E51F8D0ABF08D90F571914A595891F9998A5BD49DFA3531 = Integer(0x3B827FF5E8EA151E6E51F8D0ABF08D90F571914A595891F9998A5BD49DFA3531); _sage_const_0xAB61705C502CA0F7AA127DEC096B2BBDC9BD3B4281808B3740C320810888592A = Integer(0xAB61705C502CA0F7AA127DEC096B2BBDC9BD3B4281808B3740C320810888592A); _sage_const_1 = Integer(1); _sage_const_13382 = Integer(13382)
p = _sage_const_0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff 

a = _sage_const_0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc 

b = _sage_const_0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b 

F = GF(p)

E = EllipticCurve(F, [a, b])


# Public key of www.bing.com

public = E(_sage_const_0x3B827FF5E8EA151E6E51F8D0ABF08D90F571914A595891F9998A5BD49DFA3531 , _sage_const_0xAB61705C502CA0F7AA127DEC096B2BBDC9BD3B4281808B3740C320810888592A )


# Order of the group a

# a = 115792089210356248762697446949407573529996955224135760342422259061068512044369

a = E.order()
print(a)
print(public * (a + _sage_const_1 ) == public)
from pwn import *
from json import dumps
print(bytes(dict({1: 2})))
conn = remote('socket.cryptohack.org', 13382 )
print(conn.readline())
payload = bytes(dict({'private_key': str(a),
                      'host': 'www.bing.com',
                      'generator': f'[{public[0]}, {public[1]}]'}))

print(payload)
conn.sendline(payload)
print(conn.readline())
